@using Kitaprazzi.Core.Helper
@using Kitaprazzi.Data.Model
@{
    var subCategories = ViewBag.SubCategories as List<Category>;
}
<div class="search-box">
    <div class="search-box-title">HANGİ KİTABI ARIYORSUNUZ?</div>
    <div class="search-box-line">
        <span class="search-box-line-title mb30">Sınıf Seçiniz</span>
        <span class="search-box-line-element">
            <select id="mainCategoryID">
                @foreach (var subCategory in subCategories)
                {
                    <option value="@subCategory.ID">@($"{subCategory.Name}")</option>

                }
            </select>
        </span>
    </div>
    <div class="search-box-line">
        <span class="search-box-line-title">Ders Seçiniz</span>
        <span class="search-box-line-element">
            <select id="SubCategory">
                <option value="0">Seçiniz</option>
            </select>
        </span>
    </div>
    <div class="search-box-line">
        <input class="find-button" type="submit" onclick="SearchList()" value="KİTAPLARI BUL">
    </div>
</div>

<script type="text/javascript">

        $(function() {
            $('#mainCategoryID').on('change', function() {
                var subCategory = $('#SubCategory');
                //disable city drop down
                /*subCategory.prop('disabled', 'disabled');*/
                //clear drop down of old city
                subCategory.empty();

                //retrieve selected state
                var state = $(this).val();
                if (state.length > 0) {
                    // retrieve data using a Url.Action() to construct url
                    $.getJSON('@Url.Action("GetLessonsWithByID")', {
                        categoryId: state
                    })
                    .done(function (data) {
                        //re-enable city drop down
                        subCategory.removeProp('disabled');
                        var defaultOption = $('<option value="0">Seçiniz</option>');
                        subCategory.append(defaultOption);
                        //for each returned state
                        $.each(data, function (i, category) {
                            //Create new option
                            var option = $('<option />').html(category['Name']).val(category['ID']);
                            //append city states drop down
                            subCategory.append(option);
                        });
                    })
                    .fail(function (jqxhr, textStatus, error) {
                        var err = textStatus + ", " + error;
                        console.log("Request Failed: " + err);
                    });
                }
            });
    })


    function SearchList() {
        var mainCat = $("#mainCategoryID").val() ? $("#mainCategoryID").val() : 0;
        var subCat = $("#SubCategory").val() ? $("#SubCategory").val() : 0;
        var _url = "/category/arama-" + mainCat+"?l="+subCat;
        console.log(_url);
        window.location.href = _url;
       
      
    }
</script>